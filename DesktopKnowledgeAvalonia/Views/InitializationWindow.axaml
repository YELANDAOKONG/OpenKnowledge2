<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:DesktopKnowledgeAvalonia.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:loc="using:DesktopKnowledgeAvalonia.Localization"
        mc:Ignorable="d" d:DesignWidth="500" d:DesignHeight="500"
        x:Class="DesktopKnowledgeAvalonia.Views.InitializationWindow"
        x:DataType="vm:InitializationViewModel"
        Icon="/Assets/avalonia-logo.ico"
        TransparencyLevelHint="AcrylicBlur"
        Background="Transparent"
        ExtendClientAreaToDecorationsHint="True"
        Title="{loc:Translate Key=init.window.title}"
        Width="700" Height="600" 
        MinWidth="500" MinHeight="500"
        WindowStartupLocation="CenterScreen"
        CanResize="True"
        Closing="OnWindowClosing">

    <Grid RowDefinitions="Auto,*,Auto" Margin="20,40,20,20">
        <!-- Header -->
        <StackPanel Grid.Row="0" Spacing="10" Margin="0,0,0,20">
            <TextBlock Text="{loc:Translate Key=init.welcome}" 
                       FontSize="24" 
                       FontWeight="SemiBold"/>
            <TextBlock Text="{loc:Translate Key=init.description}" 
                       TextWrapping="Wrap"
                       Opacity="0.8"/>
        </StackPanel>
        
        <!-- Form Fields -->
        <ScrollViewer Grid.Row="1">
            <StackPanel Spacing="15">
                <!-- API URL -->
                <StackPanel>
                    <TextBlock Text="{loc:Translate Key=init.api.url}" 
                               Margin="0,0,0,5"/>
                    <TextBox Text="{Binding ApiUrl}" 
                             Watermark="{loc:Translate Key=init.api.url.placeholder}"
                             MaxLength="100"/>
                    <TextBlock Text="{Binding ApiUrlError}" 
                               Foreground="Red" 
                               IsVisible="{Binding !!ApiUrlError}"/>
                </StackPanel>
                
                <!-- API Key -->
                <!-- API Key with visibility toggle -->
                <StackPanel>
                    <TextBlock Text="{loc:Translate Key=init.api.key}" 
                               Margin="0,0,0,5"/>
                    <Grid>
                        <TextBox Text="{Binding ApiKey}"
                                 PasswordChar="{Binding ApiKeyPasswordChar}"
                                 Watermark="{loc:Translate Key=init.api.key.placeholder}"
                                 MaxLength="100"/>
                        <Button Grid.Column="1" 
                                HorizontalAlignment="Right" 
                                VerticalAlignment="Center"
                                Margin="0,0,10,0"
                                Background="Transparent"
                                Padding="5"
                                Command="{Binding ToggleApiKeyVisibilityCommand}">
                            <PathIcon Data="{Binding ApiKeyVisibilityIcon}" Width="16" Height="16"/>
                        </Button>
                    </Grid>
                    <TextBlock Text="{Binding ApiKeyError}" 
                               Foreground="Red" 
                               IsVisible="{Binding !!ApiKeyError}"/>
                </StackPanel>

                
                <!-- Model -->
                <StackPanel>
                    <TextBlock Text="{loc:Translate Key=init.model}" 
                               Margin="0,0,0,5"/>
                    <TextBox Text="{Binding Model}" 
                             Watermark="{loc:Translate Key=init.model.placeholder}"
                             MaxLength="50"/>
                    <TextBlock Text="{Binding ModelError}" 
                               Foreground="Red" 
                               IsVisible="{Binding !!ModelError}"/>
                </StackPanel>
                
                <!-- Temperature -->
                <StackPanel>
                    <Grid ColumnDefinitions="*,Auto">
                        <TextBlock Grid.Column="0" 
                                   Text="{loc:Translate Key=init.temperature}" 
                                   Margin="0,0,0,5"/>
                        <TextBlock Grid.Column="1" 
                                   Text="{Binding TemperatureFormatted}" 
                                   Opacity="0.7"/>
                    </Grid>
                    <Slider Value="{Binding Temperature}" 
                            Minimum="0" 
                            Maximum="2" 
                            TickFrequency="0.01" 
                            IsSnapToTickEnabled="True" 
                            SmallChange="0.01" 
                            LargeChange="0.1"/>
                </StackPanel>
                
                <!-- Test Connection Section -->
                <Border Background="#10FFFFFF" CornerRadius="4" Padding="15" Margin="0,15,0,0">
                    <StackPanel Spacing="10">
                        <TextBlock Text="{loc:Translate Key=init.test.connection.title}" 
                                   FontWeight="SemiBold"/>
                        <TextBlock Text="{loc:Translate Key=init.test.connection.description}" 
                                   TextWrapping="Wrap" 
                                   Opacity="0.8"/>
                        <Grid ColumnDefinitions="*,Auto" Margin="0,5,0,0">
                            <Button Grid.Column="1" 
                                    Content="{loc:Translate Key=init.test.connection.button}" 
                                    Command="{Binding TestConnectionCommand}" 
                                    IsEnabled="{Binding !IsTestingConnection}"/>
                        </Grid>
                        
                        <!-- Test Results -->
                        <Border IsVisible="{Binding IsConnectionTested}" 
                                Background="{Binding ConnectionStatusBackground}" 
                                CornerRadius="4" 
                                Padding="10">
                            <TextBlock Text="{Binding ConnectionStatus}" 
                                       Foreground="White" 
                                       TextWrapping="Wrap"/>
                        </Border>
                    </StackPanel>
                </Border>
            </StackPanel>
        </ScrollViewer>
        
        <!-- Footer Buttons -->
        <Grid Grid.Row="2" ColumnDefinitions="Auto,*,Auto" Margin="0,20,0,0">
            <Button Grid.Column="0" 
                    Content="{loc:Translate Key=init.button.exit}" 
                    Classes="Danger" 
                    Click="OnExitClick"/>
            
            <Button Grid.Column="2" 
                    Content="{loc:Translate Key=init.button.save}" 
                    Classes="Primary" 
                    Command="{Binding SaveCommand}" 
                    IsEnabled="{Binding CanSave}"/>
        </Grid>
    </Grid>
</Window>
